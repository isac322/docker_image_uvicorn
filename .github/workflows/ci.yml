name: ci

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  uvicorn_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.uvicorn_version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Get uvicorn version
        id: uvicorn_version
        run: |
          VERSION=$(python -c "from pkg_resources import parse_requirements; print(next(filter(lambda r: r.name == 'uvicorn', parse_requirements(open('requirements-essential.in').read()))).specs[0][1])")
          echo $VERSION
          echo "::set-output name=version::${VERSION}"
  docker:
    runs-on: ubuntu-latest
    needs: uvicorn_version
    env:
      PLATFORMS: linux/amd64,linux/arm64/v8,linux/386,linux/arm/v7
    strategy:
      matrix:
        python_ver: [3.6, 3.7, 3.8, 3.9, 3.10-rc]
        python_img_type: [alpine, slim]
        extra_type: [cython, essential, standard]
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/uvicorn
          tag-custom: |
            py${{ matrix.python_ver }}-${{ matrix.python_img_type }}-${{ needs.uvicorn_version.outputs.version }}-${{ matrix.extra_type }}
            py${{ matrix.python_ver }}-${{ matrix.python_img_type }}-${{ matrix.extra_type }}
          tag-latest: ${{ matrix.python_ver == '3.9' && matrix.python_img_type == 'alpine' && matrix.extra_type == 'essential' }}
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ env.PLATFORMS }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          build-args: |
            PYTHON_VER=${{ matrix.python_ver }}
            PYTHON_IMG_TYPE=${{ matrix.python_img_type }}
            EXT_TYPE=${{ matrix.extra_type }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/uvicorn:py${{ matrix.python_ver }}-${{ matrix.python_img_type }}-${{ matrix.extra_type }}
          cache-to: type=inline
